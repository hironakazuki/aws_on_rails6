version: 2

jobs:
  test:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        # 環境変数の定義
        environment:
          RAILS_ENV: 'test'
          DATABASE_HOSTNAME: '127.0.0.1'
          BUNDLER_VERSION: 2.0.2

      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: 'password'
          MYSQL_DATABASE: webapp_test
          

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          # system_testで使うgoogle-chromeのインストール
          name: Install System Dependencies
          command: |
            sudo apt-get update
            yarn install --check-files
            sudo apt-get install -y libappindicator1 fonts-liberation
            export CHROME_BIN=/usr/bin/google-chrome
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome*.deb
      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            sudo gem install bundler
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: bundle install
          command: bundle install --path vendor/bundle --clean --jobs 4 --retry 3
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: データベースの起動を待機
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: データベースのセットアップ
          command: bundle exec rake db:create db:schema:load
      - run:
          # テストを実行する
          name: Run Rspec
          command: |
            mkdir ~/rspec
            bundle exec rspec --profile 10 \
                            --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
          when: always
      - store_test_results:
          path: ~/rspec
  # EC2にSSH接続し、デプロイを実行
  deploy:
    machine:
      image: circleci/classic:edge

    steps:
      - checkout
      # CircleCIに登録した秘密鍵を呼び出す。
      - add_ssh_keys:
          fingerprints:
            - "${KEY_FINGERPRINT}"
      # AWS CLIのインストール
      - run:
          name: install awscli
          command: sudo pip install awscli
      # デプロイ用のシェルを実行する
      - run:
          name: deploy to EC2
          command: sh script/deploy_ec2.sh


# テストが成功した場合のみ、deployを実行するようにします。
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          # masterブランチがpushされた場合のみdeployするようにする。
          filters:
            branches:
              only: master